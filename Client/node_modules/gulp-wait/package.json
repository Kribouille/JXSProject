{
  "_args": [
    [
      "gulp-wait@0.0.2",
      "/Users/kevinledy/Documents/JXSProject/Client"
    ]
  ],
  "_from": "gulp-wait@0.0.2",
  "_id": "gulp-wait@0.0.2",
  "_inCache": true,
  "_installable": true,
  "_location": "/gulp-wait",
  "_npmUser": {
    "email": "contact@brianpartridge.com",
    "name": "bpartridge83"
  },
  "_npmVersion": "1.3.14",
  "_phantomChildren": {},
  "_requested": {
    "name": "gulp-wait",
    "raw": "gulp-wait@0.0.2",
    "rawSpec": "0.0.2",
    "scope": null,
    "spec": "0.0.2",
    "type": "version"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/gulp-wait/-/gulp-wait-0.0.2.tgz",
  "_shasum": "ecebff4446e1a0d537cb1dc773dbd4581d17fb2d",
  "_shrinkwrap": null,
  "_spec": "gulp-wait@0.0.2",
  "_where": "/Users/kevinledy/Documents/JXSProject/Client",
  "author": {
    "name": "Brian Partridge"
  },
  "bugs": {
    "url": "https://github.com/bpartridge/gulp-wait/issues"
  },
  "dependencies": {
    "map-stream": "0.0.4"
  },
  "description": "A gulp task that inserts a delay before calling the next function in a chain.",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "ecebff4446e1a0d537cb1dc773dbd4581d17fb2d",
    "tarball": "https://registry.npmjs.org/gulp-wait/-/gulp-wait-0.0.2.tgz"
  },
  "homepage": "https://github.com/bpartridge83/gulp-wait",
  "keywords": [
    "gulp",
    "wait",
    "delay",
    "gulpplugin"
  ],
  "license": "BSD-2-Clause",
  "main": "index.js",
  "maintainers": [
    {
      "email": "contact@brianpartridge.com",
      "name": "bpartridge83"
    }
  ],
  "name": "gulp-wait",
  "optionalDependencies": {},
  "readme": "gulp-wait\n=========\n\nA gulp task that inserts a delay before calling the next function in a chain.\n\n## Example\n\nThe following example will watch for changes to templates and delay the livereload server refresh until after the nodemon script is expected to have restarted.\n\n```javascript\n// Gulpfile.js\nvar gulp = require('gulp')\n  , r = require('tiny-lr')\n  , refresh = require('gulp-livereload')\n  , nodemon = require('gulp-nodemon')\n  , wait = require('../gulp-wait')\n  , server = lr();\n\ngulp.task('dev', function () {\n\n  gulp.src('./index.js')\n    .pipe(nodemon());\n\n  server.listen(35729, function (err) {\n\n  \tif (err) return console.log(err);\n\n  \tgulp.watch('./app/views/**/*.html', function (e) {\n      gulp.src(e.path)\n        .pipe(wait(1500))\n        .pipe(refresh(server));\n    });\n\n  });\n\n})\n\n```\n\nYes, ideally there would be an event from nodemon to trigger the livereload.",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/bpartridge83/gulp-wait.git"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "0.0.2"
}
