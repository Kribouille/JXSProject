{"version":3,"file":"http.umd.js","sources":["src/facade/lang.js","src/facade/collection.js","src/facade/exceptions.js","src/interfaces.js","src/headers.js","src/enums.js","src/http_utils.js","src/static_request.js","src/url_search_params.js","src/base_request_options.js","src/http.js","src/static_response.js","src/base_response_options.js","src/backends/browser_xhr.js","src/backends/xhr_backend.js","src/backends/browser_jsonp.js","src/backends/jsonp_backend.js","http.js"],"sourcesContent":["var globalScope;\nif (typeof window === 'undefined') {\n    if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) {\n        // TODO: Replace any with WorkerGlobalScope from lib.webworker.d.ts #3492\n        globalScope = self;\n    }\n    else {\n        globalScope = global;\n    }\n}\nelse {\n    globalScope = window;\n}\nexport function scheduleMicroTask(fn) {\n    Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n}\nexport const IS_DART = false;\n// Need to declare a new variable for global here since TypeScript\n// exports the original value of the symbol.\nvar _global = globalScope;\nexport { _global as global };\nexport var Type = Function;\nexport function getTypeNameForDebugging(type) {\n    if (type['name']) {\n        return type['name'];\n    }\n    return typeof type;\n}\nexport var Math = _global.Math;\nexport var Date = _global.Date;\nvar _devMode = true;\nvar _modeLocked = false;\nexport function lockMode() {\n    _modeLocked = true;\n}\n/**\n * Disable Angular's development mode, which turns off assertions and other\n * checks within the framework.\n *\n * One important assertion this disables verifies that a change detection pass\n * does not result in additional changes to any bindings (also known as\n * unidirectional data flow).\n */\nexport function enableProdMode() {\n    if (_modeLocked) {\n        // Cannot use BaseException as that ends up importing from facade/lang.\n        throw 'Cannot enable prod mode after platform setup.';\n    }\n    _devMode = false;\n}\nexport function assertionsEnabled() {\n    return _devMode;\n}\n// TODO: remove calls to assert in production environment\n// Note: Can't just export this and import in in other files\n// as `assert` is a reserved keyword in Dart\n_global.assert = function assert(condition) {\n    // TODO: to be fixed properly via #2830, noop for now\n};\nexport function isPresent(obj) {\n    return obj !== undefined && obj !== null;\n}\nexport function isBlank(obj) {\n    return obj === undefined || obj === null;\n}\nexport function isBoolean(obj) {\n    return typeof obj === \"boolean\";\n}\nexport function isNumber(obj) {\n    return typeof obj === \"number\";\n}\nexport function isString(obj) {\n    return typeof obj === \"string\";\n}\nexport function isFunction(obj) {\n    return typeof obj === \"function\";\n}\nexport function isType(obj) {\n    return isFunction(obj);\n}\nexport function isStringMap(obj) {\n    return typeof obj === 'object' && obj !== null;\n}\nconst STRING_MAP_PROTO = Object.getPrototypeOf({});\nexport function isStrictStringMap(obj) {\n    return isStringMap(obj) && Object.getPrototypeOf(obj) === STRING_MAP_PROTO;\n}\nexport function isPromise(obj) {\n    return obj instanceof _global.Promise;\n}\nexport function isArray(obj) {\n    return Array.isArray(obj);\n}\nexport function isDate(obj) {\n    return obj instanceof Date && !isNaN(obj.valueOf());\n}\nexport function noop() { }\nexport function stringify(token) {\n    if (typeof token === 'string') {\n        return token;\n    }\n    if (token === undefined || token === null) {\n        return '' + token;\n    }\n    if (token.name) {\n        return token.name;\n    }\n    if (token.overriddenName) {\n        return token.overriddenName;\n    }\n    var res = token.toString();\n    var newLineIndex = res.indexOf(\"\\n\");\n    return (newLineIndex === -1) ? res : res.substring(0, newLineIndex);\n}\n// serialize / deserialize enum exist only for consistency with dart API\n// enums in typescript don't need to be serialized\nexport function serializeEnum(val) {\n    return val;\n}\nexport function deserializeEnum(val, values) {\n    return val;\n}\nexport function resolveEnumToken(enumValue, val) {\n    return enumValue[val];\n}\nexport class StringWrapper {\n    static fromCharCode(code) { return String.fromCharCode(code); }\n    static charCodeAt(s, index) { return s.charCodeAt(index); }\n    static split(s, regExp) { return s.split(regExp); }\n    static equals(s, s2) { return s === s2; }\n    static stripLeft(s, charVal) {\n        if (s && s.length) {\n            var pos = 0;\n            for (var i = 0; i < s.length; i++) {\n                if (s[i] != charVal)\n                    break;\n                pos++;\n            }\n            s = s.substring(pos);\n        }\n        return s;\n    }\n    static stripRight(s, charVal) {\n        if (s && s.length) {\n            var pos = s.length;\n            for (var i = s.length - 1; i >= 0; i--) {\n                if (s[i] != charVal)\n                    break;\n                pos--;\n            }\n            s = s.substring(0, pos);\n        }\n        return s;\n    }\n    static replace(s, from, replace) {\n        return s.replace(from, replace);\n    }\n    static replaceAll(s, from, replace) {\n        return s.replace(from, replace);\n    }\n    static slice(s, from = 0, to = null) {\n        return s.slice(from, to === null ? undefined : to);\n    }\n    static replaceAllMapped(s, from, cb) {\n        return s.replace(from, function (...matches) {\n            // Remove offset & string from the result array\n            matches.splice(-2, 2);\n            // The callback receives match, p1, ..., pn\n            return cb(matches);\n        });\n    }\n    static contains(s, substr) { return s.indexOf(substr) != -1; }\n    static compare(a, b) {\n        if (a < b) {\n            return -1;\n        }\n        else if (a > b) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n}\nexport class StringJoiner {\n    constructor(parts = []) {\n        this.parts = parts;\n    }\n    add(part) { this.parts.push(part); }\n    toString() { return this.parts.join(\"\"); }\n}\nexport class NumberParseError extends Error {\n    constructor(message) {\n        super();\n        this.message = message;\n    }\n    toString() { return this.message; }\n}\nexport class NumberWrapper {\n    static toFixed(n, fractionDigits) { return n.toFixed(fractionDigits); }\n    static equal(a, b) { return a === b; }\n    static parseIntAutoRadix(text) {\n        var result = parseInt(text);\n        if (isNaN(result)) {\n            throw new NumberParseError(\"Invalid integer literal when parsing \" + text);\n        }\n        return result;\n    }\n    static parseInt(text, radix) {\n        if (radix == 10) {\n            if (/^(\\-|\\+)?[0-9]+$/.test(text)) {\n                return parseInt(text, radix);\n            }\n        }\n        else if (radix == 16) {\n            if (/^(\\-|\\+)?[0-9ABCDEFabcdef]+$/.test(text)) {\n                return parseInt(text, radix);\n            }\n        }\n        else {\n            var result = parseInt(text, radix);\n            if (!isNaN(result)) {\n                return result;\n            }\n        }\n        throw new NumberParseError(\"Invalid integer literal when parsing \" + text + \" in base \" +\n            radix);\n    }\n    // TODO: NaN is a valid literal but is returned by parseFloat to indicate an error.\n    static parseFloat(text) { return parseFloat(text); }\n    static get NaN() { return NaN; }\n    static isNaN(value) { return isNaN(value); }\n    static isInteger(value) { return Number.isInteger(value); }\n}\nexport var RegExp = _global.RegExp;\nexport class RegExpWrapper {\n    static create(regExpStr, flags = '') {\n        flags = flags.replace(/g/g, '');\n        return new _global.RegExp(regExpStr, flags + 'g');\n    }\n    static firstMatch(regExp, input) {\n        // Reset multimatch regex state\n        regExp.lastIndex = 0;\n        return regExp.exec(input);\n    }\n    static test(regExp, input) {\n        regExp.lastIndex = 0;\n        return regExp.test(input);\n    }\n    static matcher(regExp, input) {\n        // Reset regex state for the case\n        // someone did not loop over all matches\n        // last time.\n        regExp.lastIndex = 0;\n        return { re: regExp, input: input };\n    }\n    static replaceAll(regExp, input, replace) {\n        let c = regExp.exec(input);\n        let res = '';\n        regExp.lastIndex = 0;\n        let prev = 0;\n        while (c) {\n            res += input.substring(prev, c.index);\n            res += replace(c);\n            prev = c.index + c[0].length;\n            regExp.lastIndex = prev;\n            c = regExp.exec(input);\n        }\n        res += input.substring(prev);\n        return res;\n    }\n}\nexport class RegExpMatcherWrapper {\n    static next(matcher) {\n        return matcher.re.exec(matcher.input);\n    }\n}\nexport class FunctionWrapper {\n    static apply(fn, posArgs) { return fn.apply(null, posArgs); }\n}\n// JS has NaN !== NaN\nexport function looseIdentical(a, b) {\n    return a === b || typeof a === \"number\" && typeof b === \"number\" && isNaN(a) && isNaN(b);\n}\n// JS considers NaN is the same as NaN for map Key (while NaN !== NaN otherwise)\n// see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map\nexport function getMapKey(value) {\n    return value;\n}\nexport function normalizeBlank(obj) {\n    return isBlank(obj) ? null : obj;\n}\nexport function normalizeBool(obj) {\n    return isBlank(obj) ? false : obj;\n}\nexport function isJsObject(o) {\n    return o !== null && (typeof o === \"function\" || typeof o === \"object\");\n}\nexport function print(obj) {\n    console.log(obj);\n}\nexport function warn(obj) {\n    console.warn(obj);\n}\n// Can't be all uppercase as our transpiler would think it is a special directive...\nexport class Json {\n    static parse(s) { return _global.JSON.parse(s); }\n    static stringify(data) {\n        // Dart doesn't take 3 arguments\n        return _global.JSON.stringify(data, null, 2);\n    }\n}\nexport class DateWrapper {\n    static create(year, month = 1, day = 1, hour = 0, minutes = 0, seconds = 0, milliseconds = 0) {\n        return new Date(year, month - 1, day, hour, minutes, seconds, milliseconds);\n    }\n    static fromISOString(str) { return new Date(str); }\n    static fromMillis(ms) { return new Date(ms); }\n    static toMillis(date) { return date.getTime(); }\n    static now() { return new Date(); }\n    static toJson(date) { return date.toJSON(); }\n}\nexport function setValueOnPath(global, path, value) {\n    var parts = path.split('.');\n    var obj = global;\n    while (parts.length > 1) {\n        var name = parts.shift();\n        if (obj.hasOwnProperty(name) && isPresent(obj[name])) {\n            obj = obj[name];\n        }\n        else {\n            obj = obj[name] = {};\n        }\n    }\n    if (obj === undefined || obj === null) {\n        obj = {};\n    }\n    obj[parts.shift()] = value;\n}\nvar _symbolIterator = null;\nexport function getSymbolIterator() {\n    if (isBlank(_symbolIterator)) {\n        if (isPresent(globalScope.Symbol) && isPresent(Symbol.iterator)) {\n            _symbolIterator = Symbol.iterator;\n        }\n        else {\n            // es6-shim specific logic\n            var keys = Object.getOwnPropertyNames(Map.prototype);\n            for (var i = 0; i < keys.length; ++i) {\n                var key = keys[i];\n                if (key !== 'entries' && key !== 'size' &&\n                    Map.prototype[key] === Map.prototype['entries']) {\n                    _symbolIterator = key;\n                }\n            }\n        }\n    }\n    return _symbolIterator;\n}\nexport function evalExpression(sourceUrl, expr, declarations, vars) {\n    var fnBody = `${declarations}\\nreturn ${expr}\\n//# sourceURL=${sourceUrl}`;\n    var fnArgNames = [];\n    var fnArgValues = [];\n    for (var argName in vars) {\n        fnArgNames.push(argName);\n        fnArgValues.push(vars[argName]);\n    }\n    return new Function(...fnArgNames.concat(fnBody))(...fnArgValues);\n}\nexport function isPrimitive(obj) {\n    return !isJsObject(obj);\n}\nexport function hasConstructor(value, type) {\n    return value.constructor === type;\n}\nexport function bitWiseOr(values) {\n    return values.reduce((a, b) => { return a | b; });\n}\nexport function bitWiseAnd(values) {\n    return values.reduce((a, b) => { return a & b; });\n}\nexport function escape(s) {\n    return _global.encodeURI(s);\n}\n//# sourceMappingURL=lang.js.map","import { isJsObject, global, isPresent, isBlank, isArray, getSymbolIterator } from './lang';\nexport var Map = global.Map;\nexport var Set = global.Set;\n// Safari and Internet Explorer do not support the iterable parameter to the\n// Map constructor.  We work around that by manually adding the items.\nvar createMapFromPairs = (function () {\n    try {\n        if (new Map([[1, 2]]).size === 1) {\n            return function createMapFromPairs(pairs) { return new Map(pairs); };\n        }\n    }\n    catch (e) {\n    }\n    return function createMapAndPopulateFromPairs(pairs) {\n        var map = new Map();\n        for (var i = 0; i < pairs.length; i++) {\n            var pair = pairs[i];\n            map.set(pair[0], pair[1]);\n        }\n        return map;\n    };\n})();\nvar createMapFromMap = (function () {\n    try {\n        if (new Map(new Map())) {\n            return function createMapFromMap(m) { return new Map(m); };\n        }\n    }\n    catch (e) {\n    }\n    return function createMapAndPopulateFromMap(m) {\n        var map = new Map();\n        m.forEach((v, k) => { map.set(k, v); });\n        return map;\n    };\n})();\nvar _clearValues = (function () {\n    if ((new Map()).keys().next) {\n        return function _clearValues(m) {\n            var keyIterator = m.keys();\n            var k;\n            while (!((k = keyIterator.next()).done)) {\n                m.set(k.value, null);\n            }\n        };\n    }\n    else {\n        return function _clearValuesWithForeEach(m) {\n            m.forEach((v, k) => { m.set(k, null); });\n        };\n    }\n})();\n// Safari doesn't implement MapIterator.next(), which is used is Traceur's polyfill of Array.from\n// TODO(mlaval): remove the work around once we have a working polyfill of Array.from\nvar _arrayFromMap = (function () {\n    try {\n        if ((new Map()).values().next) {\n            return function createArrayFromMap(m, getValues) {\n                return getValues ? Array.from(m.values()) : Array.from(m.keys());\n            };\n        }\n    }\n    catch (e) {\n    }\n    return function createArrayFromMapWithForeach(m, getValues) {\n        var res = ListWrapper.createFixedSize(m.size), i = 0;\n        m.forEach((v, k) => {\n            res[i] = getValues ? v : k;\n            i++;\n        });\n        return res;\n    };\n})();\nexport class MapWrapper {\n    static clone(m) { return createMapFromMap(m); }\n    static createFromStringMap(stringMap) {\n        var result = new Map();\n        for (var prop in stringMap) {\n            result.set(prop, stringMap[prop]);\n        }\n        return result;\n    }\n    static toStringMap(m) {\n        var r = {};\n        m.forEach((v, k) => r[k] = v);\n        return r;\n    }\n    static createFromPairs(pairs) { return createMapFromPairs(pairs); }\n    static clearValues(m) { _clearValues(m); }\n    static iterable(m) { return m; }\n    static keys(m) { return _arrayFromMap(m, false); }\n    static values(m) { return _arrayFromMap(m, true); }\n}\n/**\n * Wraps Javascript Objects\n */\nexport class StringMapWrapper {\n    static create() {\n        // Note: We are not using Object.create(null) here due to\n        // performance!\n        // http://jsperf.com/ng2-object-create-null\n        return {};\n    }\n    static contains(map, key) {\n        return map.hasOwnProperty(key);\n    }\n    static get(map, key) {\n        return map.hasOwnProperty(key) ? map[key] : undefined;\n    }\n    static set(map, key, value) { map[key] = value; }\n    static keys(map) { return Object.keys(map); }\n    static values(map) {\n        return Object.keys(map).reduce((r, a) => {\n            r.push(map[a]);\n            return r;\n        }, []);\n    }\n    static isEmpty(map) {\n        for (var prop in map) {\n            return false;\n        }\n        return true;\n    }\n    static delete(map, key) { delete map[key]; }\n    static forEach(map, callback) {\n        for (var prop in map) {\n            if (map.hasOwnProperty(prop)) {\n                callback(map[prop], prop);\n            }\n        }\n    }\n    static merge(m1, m2) {\n        var m = {};\n        for (var attr in m1) {\n            if (m1.hasOwnProperty(attr)) {\n                m[attr] = m1[attr];\n            }\n        }\n        for (var attr in m2) {\n            if (m2.hasOwnProperty(attr)) {\n                m[attr] = m2[attr];\n            }\n        }\n        return m;\n    }\n    static equals(m1, m2) {\n        var k1 = Object.keys(m1);\n        var k2 = Object.keys(m2);\n        if (k1.length != k2.length) {\n            return false;\n        }\n        var key;\n        for (var i = 0; i < k1.length; i++) {\n            key = k1[i];\n            if (m1[key] !== m2[key]) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\nexport class ListWrapper {\n    // JS has no way to express a statically fixed size list, but dart does so we\n    // keep both methods.\n    static createFixedSize(size) { return new Array(size); }\n    static createGrowableSize(size) { return new Array(size); }\n    static clone(array) { return array.slice(0); }\n    static forEachWithIndex(array, fn) {\n        for (var i = 0; i < array.length; i++) {\n            fn(array[i], i);\n        }\n    }\n    static first(array) {\n        if (!array)\n            return null;\n        return array[0];\n    }\n    static last(array) {\n        if (!array || array.length == 0)\n            return null;\n        return array[array.length - 1];\n    }\n    static indexOf(array, value, startIndex = 0) {\n        return array.indexOf(value, startIndex);\n    }\n    static contains(list, el) { return list.indexOf(el) !== -1; }\n    static reversed(array) {\n        var a = ListWrapper.clone(array);\n        return a.reverse();\n    }\n    static concat(a, b) { return a.concat(b); }\n    static insert(list, index, value) { list.splice(index, 0, value); }\n    static removeAt(list, index) {\n        var res = list[index];\n        list.splice(index, 1);\n        return res;\n    }\n    static removeAll(list, items) {\n        for (var i = 0; i < items.length; ++i) {\n            var index = list.indexOf(items[i]);\n            list.splice(index, 1);\n        }\n    }\n    static remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n            return true;\n        }\n        return false;\n    }\n    static clear(list) { list.length = 0; }\n    static isEmpty(list) { return list.length == 0; }\n    static fill(list, value, start = 0, end = null) {\n        list.fill(value, start, end === null ? list.length : end);\n    }\n    static equals(a, b) {\n        if (a.length != b.length)\n            return false;\n        for (var i = 0; i < a.length; ++i) {\n            if (a[i] !== b[i])\n                return false;\n        }\n        return true;\n    }\n    static slice(l, from = 0, to = null) {\n        return l.slice(from, to === null ? undefined : to);\n    }\n    static splice(l, from, length) { return l.splice(from, length); }\n    static sort(l, compareFn) {\n        if (isPresent(compareFn)) {\n            l.sort(compareFn);\n        }\n        else {\n            l.sort();\n        }\n    }\n    static toString(l) { return l.toString(); }\n    static toJSON(l) { return JSON.stringify(l); }\n    static maximum(list, predicate) {\n        if (list.length == 0) {\n            return null;\n        }\n        var solution = null;\n        var maxValue = -Infinity;\n        for (var index = 0; index < list.length; index++) {\n            var candidate = list[index];\n            if (isBlank(candidate)) {\n                continue;\n            }\n            var candidateValue = predicate(candidate);\n            if (candidateValue > maxValue) {\n                solution = candidate;\n                maxValue = candidateValue;\n            }\n        }\n        return solution;\n    }\n    static flatten(list) {\n        var target = [];\n        _flattenArray(list, target);\n        return target;\n    }\n    static addAll(list, source) {\n        for (var i = 0; i < source.length; i++) {\n            list.push(source[i]);\n        }\n    }\n}\nfunction _flattenArray(source, target) {\n    if (isPresent(source)) {\n        for (var i = 0; i < source.length; i++) {\n            var item = source[i];\n            if (isArray(item)) {\n                _flattenArray(item, target);\n            }\n            else {\n                target.push(item);\n            }\n        }\n    }\n    return target;\n}\nexport function isListLikeIterable(obj) {\n    if (!isJsObject(obj))\n        return false;\n    return isArray(obj) ||\n        (!(obj instanceof Map) &&\n            getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n}\nexport function areIterablesEqual(a, b, comparator) {\n    var iterator1 = a[getSymbolIterator()]();\n    var iterator2 = b[getSymbolIterator()]();\n    while (true) {\n        let item1 = iterator1.next();\n        let item2 = iterator2.next();\n        if (item1.done && item2.done)\n            return true;\n        if (item1.done || item2.done)\n            return false;\n        if (!comparator(item1.value, item2.value))\n            return false;\n    }\n}\nexport function iterateListLike(obj, fn) {\n    if (isArray(obj)) {\n        for (var i = 0; i < obj.length; i++) {\n            fn(obj[i]);\n        }\n    }\n    else {\n        var iterator = obj[getSymbolIterator()]();\n        var item;\n        while (!((item = iterator.next()).done)) {\n            fn(item.value);\n        }\n    }\n}\n// Safari and Internet Explorer do not support the iterable parameter to the\n// Set constructor.  We work around that by manually adding the items.\nvar createSetFromList = (function () {\n    var test = new Set([1, 2, 3]);\n    if (test.size === 3) {\n        return function createSetFromList(lst) { return new Set(lst); };\n    }\n    else {\n        return function createSetAndPopulateFromList(lst) {\n            var res = new Set(lst);\n            if (res.size !== lst.length) {\n                for (var i = 0; i < lst.length; i++) {\n                    res.add(lst[i]);\n                }\n            }\n            return res;\n        };\n    }\n})();\nexport class SetWrapper {\n    static createFromList(lst) { return createSetFromList(lst); }\n    static has(s, key) { return s.has(key); }\n    static delete(m, k) { m.delete(k); }\n}\n//# sourceMappingURL=collection.js.map","import { BaseWrappedException } from './base_wrapped_exception';\nimport { ExceptionHandler } from './exception_handler';\nexport { ExceptionHandler } from './exception_handler';\nexport class BaseException extends Error {\n    constructor(message = \"--\") {\n        super(message);\n        this.message = message;\n        this.stack = (new Error(message)).stack;\n    }\n    toString() { return this.message; }\n}\n/**\n * Wraps an exception and provides additional context or information.\n */\nexport class WrappedException extends BaseWrappedException {\n    constructor(_wrapperMessage, _originalException, _originalStack, _context) {\n        super(_wrapperMessage);\n        this._wrapperMessage = _wrapperMessage;\n        this._originalException = _originalException;\n        this._originalStack = _originalStack;\n        this._context = _context;\n        this._wrapperStack = (new Error(_wrapperMessage)).stack;\n    }\n    get wrapperMessage() { return this._wrapperMessage; }\n    get wrapperStack() { return this._wrapperStack; }\n    get originalException() { return this._originalException; }\n    get originalStack() { return this._originalStack; }\n    get context() { return this._context; }\n    get message() { return ExceptionHandler.exceptionToString(this); }\n    toString() { return this.message; }\n}\nexport function makeTypeError(message) {\n    return new TypeError(message);\n}\nexport function unimplemented() {\n    throw new BaseException('unimplemented');\n}\n//# sourceMappingURL=exceptions.js.map","/**\n * Abstract class from which real backends are derived.\n *\n * The primary purpose of a `ConnectionBackend` is to create new connections to fulfill a given\n * {@link Request}.\n */\nexport class ConnectionBackend {\n}\n/**\n * Abstract class from which real connections are derived.\n */\nexport class Connection {\n}\n//# sourceMappingURL=interfaces.js.map","import { isBlank } from '../src/facade/lang';\nimport { BaseException } from '../src/facade/exceptions';\nimport { isListLikeIterable, iterateListLike, Map, MapWrapper, StringMapWrapper, ListWrapper } from '../src/facade/collection';\n/**\n * Polyfill for [Headers](https://developer.mozilla.org/en-US/docs/Web/API/Headers/Headers), as\n * specified in the [Fetch Spec](https://fetch.spec.whatwg.org/#headers-class).\n *\n * The only known difference between this `Headers` implementation and the spec is the\n * lack of an `entries` method.\n *\n * ### Example ([live demo](http://plnkr.co/edit/MTdwT6?p=preview))\n *\n * ```\n * import {Headers} from '@angular/http';\n *\n * var firstHeaders = new Headers();\n * firstHeaders.append('Content-Type', 'image/jpeg');\n * console.log(firstHeaders.get('Content-Type')) //'image/jpeg'\n *\n * // Create headers from Plain Old JavaScript Object\n * var secondHeaders = new Headers({\n *   'X-My-Custom-Header': 'Angular'\n * });\n * console.log(secondHeaders.get('X-My-Custom-Header')); //'Angular'\n *\n * var thirdHeaders = new Headers(secondHeaders);\n * console.log(thirdHeaders.get('X-My-Custom-Header')); //'Angular'\n * ```\n */\nexport class Headers {\n    constructor(headers) {\n        if (headers instanceof Headers) {\n            this._headersMap = headers._headersMap;\n            return;\n        }\n        this._headersMap = new Map();\n        if (isBlank(headers)) {\n            return;\n        }\n        // headers instanceof StringMap\n        StringMapWrapper.forEach(headers, (v, k) => {\n            this._headersMap.set(k, isListLikeIterable(v) ? v : [v]);\n        });\n    }\n    /**\n     * Returns a new Headers instance from the given DOMString of Response Headers\n     */\n    static fromResponseHeaderString(headersString) {\n        return headersString.trim()\n            .split('\\n')\n            .map(val => val.split(':'))\n            .map(([key, ...parts]) => ([key.trim(), parts.join(':').trim()]))\n            .reduce((headers, [key, value]) => !headers.set(key, value) && headers, new Headers());\n    }\n    /**\n     * Appends a header to existing list of header values for a given header name.\n     */\n    append(name, value) {\n        var mapName = this._headersMap.get(name);\n        var list = isListLikeIterable(mapName) ? mapName : [];\n        list.push(value);\n        this._headersMap.set(name, list);\n    }\n    /**\n     * Deletes all header values for the given name.\n     */\n    delete(name) { this._headersMap.delete(name); }\n    forEach(fn) {\n        this._headersMap.forEach(fn);\n    }\n    /**\n     * Returns first header that matches given name.\n     */\n    get(header) { return ListWrapper.first(this._headersMap.get(header)); }\n    /**\n     * Check for existence of header by given name.\n     */\n    has(header) { return this._headersMap.has(header); }\n    /**\n     * Provides names of set headers\n     */\n    keys() { return MapWrapper.keys(this._headersMap); }\n    /**\n     * Sets or overrides header value for given name.\n     */\n    set(header, value) {\n        var list = [];\n        if (isListLikeIterable(value)) {\n            var pushValue = value.join(',');\n            list.push(pushValue);\n        }\n        else {\n            list.push(value);\n        }\n        this._headersMap.set(header, list);\n    }\n    /**\n     * Returns values of all headers.\n     */\n    values() { return MapWrapper.values(this._headersMap); }\n    /**\n     * Returns string of all headers.\n     */\n    toJSON() {\n        let serializableHeaders = {};\n        this._headersMap.forEach((values, name) => {\n            let list = [];\n            iterateListLike(values, val => list = ListWrapper.concat(list, val.split(',')));\n            serializableHeaders[name] = list;\n        });\n        return serializableHeaders;\n    }\n    /**\n     * Returns list of header values for a given name.\n     */\n    getAll(header) {\n        var headers = this._headersMap.get(header);\n        return isListLikeIterable(headers) ? headers : [];\n    }\n    /**\n     * This method is not implemented.\n     */\n    entries() { throw new BaseException('\"entries\" method is not implemented on Headers class'); }\n}\n//# sourceMappingURL=headers.js.map","/**\n* Supported http methods.\n*/\nexport var RequestMethod;\n(function (RequestMethod) {\n    RequestMethod[RequestMethod[\"Get\"] = 0] = \"Get\";\n    RequestMethod[RequestMethod[\"Post\"] = 1] = \"Post\";\n    RequestMethod[RequestMethod[\"Put\"] = 2] = \"Put\";\n    RequestMethod[RequestMethod[\"Delete\"] = 3] = \"Delete\";\n    RequestMethod[RequestMethod[\"Options\"] = 4] = \"Options\";\n    RequestMethod[RequestMethod[\"Head\"] = 5] = \"Head\";\n    RequestMethod[RequestMethod[\"Patch\"] = 6] = \"Patch\";\n})(RequestMethod || (RequestMethod = {}));\n/**\n * All possible states in which a connection can be, based on\n * [States](http://www.w3.org/TR/XMLHttpRequest/#states) from the `XMLHttpRequest` spec, but with an\n * additional \"CANCELLED\" state.\n */\nexport var ReadyState;\n(function (ReadyState) {\n    ReadyState[ReadyState[\"Unsent\"] = 0] = \"Unsent\";\n    ReadyState[ReadyState[\"Open\"] = 1] = \"Open\";\n    ReadyState[ReadyState[\"HeadersReceived\"] = 2] = \"HeadersReceived\";\n    ReadyState[ReadyState[\"Loading\"] = 3] = \"Loading\";\n    ReadyState[ReadyState[\"Done\"] = 4] = \"Done\";\n    ReadyState[ReadyState[\"Cancelled\"] = 5] = \"Cancelled\";\n})(ReadyState || (ReadyState = {}));\n/**\n * Acceptable response types to be associated with a {@link Response}, based on\n * [ResponseType](https://fetch.spec.whatwg.org/#responsetype) from the Fetch spec.\n */\nexport var ResponseType;\n(function (ResponseType) {\n    ResponseType[ResponseType[\"Basic\"] = 0] = \"Basic\";\n    ResponseType[ResponseType[\"Cors\"] = 1] = \"Cors\";\n    ResponseType[ResponseType[\"Default\"] = 2] = \"Default\";\n    ResponseType[ResponseType[\"Error\"] = 3] = \"Error\";\n    ResponseType[ResponseType[\"Opaque\"] = 4] = \"Opaque\";\n})(ResponseType || (ResponseType = {}));\n//# sourceMappingURL=enums.js.map","import { isString } from '../src/facade/lang';\nimport { RequestMethod } from './enums';\nimport { makeTypeError } from '../src/facade/exceptions';\nexport function normalizeMethodName(method) {\n    if (isString(method)) {\n        var originalMethod = method;\n        method = method\n            .replace(/(\\w)(\\w*)/g, (g0, g1, g2) => g1.toUpperCase() + g2.toLowerCase());\n        method = RequestMethod[method];\n        if (typeof method !== 'number')\n            throw makeTypeError(`Invalid request method. The method \"${originalMethod}\" is not supported.`);\n    }\n    return method;\n}\nexport const isSuccess = (status) => (status >= 200 && status < 300);\nexport function getResponseURL(xhr) {\n    if ('responseURL' in xhr) {\n        return xhr.responseURL;\n    }\n    if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n        return xhr.getResponseHeader('X-Request-URL');\n    }\n    return;\n}\nexport { isJsObject } from '../src/facade/lang';\n//# sourceMappingURL=http_utils.js.map","import { Headers } from './headers';\nimport { normalizeMethodName } from './http_utils';\nimport { isPresent, StringWrapper } from '../src/facade/lang';\n// TODO(jeffbcross): properly implement body accessors\n/**\n * Creates `Request` instances from provided values.\n *\n * The Request's interface is inspired by the Request constructor defined in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#request-class),\n * but is considered a static value whose body can be accessed many times. There are other\n * differences in the implementation, but this is the most significant.\n *\n * `Request` instances are typically created by higher-level classes, like {@link Http} and\n * {@link Jsonp}, but it may occasionally be useful to explicitly create `Request` instances.\n * One such example is when creating services that wrap higher-level services, like {@link Http},\n * where it may be useful to generate a `Request` with arbitrary headers and search params.\n *\n * ```typescript\n * import {Injectable, Injector} from '@angular/core';\n * import {HTTP_PROVIDERS, Http, Request, RequestMethod} from '@angular/http';\n *\n * @Injectable()\n * class AutoAuthenticator {\n *   constructor(public http:Http) {}\n *   request(url:string) {\n *     return this.http.request(new Request({\n *       method: RequestMethod.Get,\n *       url: url,\n *       search: 'password=123'\n *     }));\n *   }\n * }\n *\n * var injector = Injector.resolveAndCreate([HTTP_PROVIDERS, AutoAuthenticator]);\n * var authenticator = injector.get(AutoAuthenticator);\n * authenticator.request('people.json').subscribe(res => {\n *   //URL should have included '?password=123'\n *   console.log('people', res.json());\n * });\n * ```\n */\nexport class Request {\n    constructor(requestOptions) {\n        // TODO: assert that url is present\n        let url = requestOptions.url;\n        this.url = requestOptions.url;\n        if (isPresent(requestOptions.search)) {\n            let search = requestOptions.search.toString();\n            if (search.length > 0) {\n                let prefix = '?';\n                if (StringWrapper.contains(this.url, '?')) {\n                    prefix = (this.url[this.url.length - 1] == '&') ? '' : '&';\n                }\n                // TODO: just delete search-query-looking string in url?\n                this.url = url + prefix + search;\n            }\n        }\n        this._body = requestOptions.body;\n        this.method = normalizeMethodName(requestOptions.method);\n        // TODO(jeffbcross): implement behavior\n        // Defaults to 'omit', consistent with browser\n        // TODO(jeffbcross): implement behavior\n        this.headers = new Headers(requestOptions.headers);\n    }\n    /**\n     * Returns the request's body as string, assuming that body exists. If body is undefined, return\n     * empty\n     * string.\n     */\n    text() { return isPresent(this._body) ? this._body.toString() : ''; }\n}\n//# sourceMappingURL=static_request.js.map","import { isPresent } from '../src/facade/lang';\nimport { Map, ListWrapper, isListLikeIterable } from '../src/facade/collection';\nfunction paramParser(rawParams = '') {\n    var map = new Map();\n    if (rawParams.length > 0) {\n        var params = rawParams.split('&');\n        params.forEach((param) => {\n            var split = param.split('=');\n            var key = split[0];\n            var val = split[1];\n            var list = isPresent(map.get(key)) ? map.get(key) : [];\n            list.push(val);\n            map.set(key, list);\n        });\n    }\n    return map;\n}\n/**\n * Map-like representation of url search parameters, based on\n * [URLSearchParams](https://url.spec.whatwg.org/#urlsearchparams) in the url living standard,\n * with several extensions for merging URLSearchParams objects:\n *   - setAll()\n *   - appendAll()\n *   - replaceAll()\n */\nexport class URLSearchParams {\n    constructor(rawParams = '') {\n        this.rawParams = rawParams;\n        this.paramsMap = paramParser(rawParams);\n    }\n    clone() {\n        var clone = new URLSearchParams();\n        clone.appendAll(this);\n        return clone;\n    }\n    has(param) { return this.paramsMap.has(param); }\n    get(param) {\n        var storedParam = this.paramsMap.get(param);\n        if (isListLikeIterable(storedParam)) {\n            return ListWrapper.first(storedParam);\n        }\n        else {\n            return null;\n        }\n    }\n    getAll(param) {\n        var mapParam = this.paramsMap.get(param);\n        return isPresent(mapParam) ? mapParam : [];\n    }\n    set(param, val) {\n        var mapParam = this.paramsMap.get(param);\n        var list = isPresent(mapParam) ? mapParam : [];\n        ListWrapper.clear(list);\n        list.push(val);\n        this.paramsMap.set(param, list);\n    }\n    // A merge operation\n    // For each name-values pair in `searchParams`, perform `set(name, values[0])`\n    //\n    // E.g: \"a=[1,2,3], c=[8]\" + \"a=[4,5,6], b=[7]\" = \"a=[4], c=[8], b=[7]\"\n    //\n    // TODO(@caitp): document this better\n    setAll(searchParams) {\n        searchParams.paramsMap.forEach((value, param) => {\n            var mapParam = this.paramsMap.get(param);\n            var list = isPresent(mapParam) ? mapParam : [];\n            ListWrapper.clear(list);\n            list.push(value[0]);\n            this.paramsMap.set(param, list);\n        });\n    }\n    append(param, val) {\n        var mapParam = this.paramsMap.get(param);\n        var list = isPresent(mapParam) ? mapParam : [];\n        list.push(val);\n        this.paramsMap.set(param, list);\n    }\n    // A merge operation\n    // For each name-values pair in `searchParams`, perform `append(name, value)`\n    // for each value in `values`.\n    //\n    // E.g: \"a=[1,2], c=[8]\" + \"a=[3,4], b=[7]\" = \"a=[1,2,3,4], c=[8], b=[7]\"\n    //\n    // TODO(@caitp): document this better\n    appendAll(searchParams) {\n        searchParams.paramsMap.forEach((value, param) => {\n            var mapParam = this.paramsMap.get(param);\n            var list = isPresent(mapParam) ? mapParam : [];\n            for (var i = 0; i < value.length; ++i) {\n                list.push(value[i]);\n            }\n            this.paramsMap.set(param, list);\n        });\n    }\n    // A merge operation\n    // For each name-values pair in `searchParams`, perform `delete(name)`,\n    // followed by `set(name, values)`\n    //\n    // E.g: \"a=[1,2,3], c=[8]\" + \"a=[4,5,6], b=[7]\" = \"a=[4,5,6], c=[8], b=[7]\"\n    //\n    // TODO(@caitp): document this better\n    replaceAll(searchParams) {\n        searchParams.paramsMap.forEach((value, param) => {\n            var mapParam = this.paramsMap.get(param);\n            var list = isPresent(mapParam) ? mapParam : [];\n            ListWrapper.clear(list);\n            for (var i = 0; i < value.length; ++i) {\n                list.push(value[i]);\n            }\n            this.paramsMap.set(param, list);\n        });\n    }\n    toString() {\n        var paramsList = [];\n        this.paramsMap.forEach((values, k) => { values.forEach(v => paramsList.push(k + '=' + v)); });\n        return paramsList.join('&');\n    }\n    delete(param) { this.paramsMap.delete(param); }\n}\n//# sourceMappingURL=url_search_params.js.map","import { isPresent, isString } from '../src/facade/lang';\nimport { Headers } from './headers';\nimport { RequestMethod } from './enums';\nimport { Injectable } from '@angular/core';\nimport { URLSearchParams } from './url_search_params';\nimport { normalizeMethodName } from './http_utils';\n/**\n * Creates a request options object to be optionally provided when instantiating a\n * {@link Request}.\n *\n * This class is based on the `RequestInit` description in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#requestinit).\n *\n * All values are null by default. Typical defaults can be found in the {@link BaseRequestOptions}\n * class, which sub-classes `RequestOptions`.\n *\n * ### Example ([live demo](http://plnkr.co/edit/7Wvi3lfLq41aQPKlxB4O?p=preview))\n *\n * ```typescript\n * import {RequestOptions, Request, RequestMethod} from '@angular/http';\n *\n * var options = new RequestOptions({\n *   method: RequestMethod.Post,\n *   url: 'https://google.com'\n * });\n * var req = new Request(options);\n * console.log('req.method:', RequestMethod[req.method]); // Post\n * console.log('options.url:', options.url); // https://google.com\n * ```\n */\nexport class RequestOptions {\n    constructor({ method, headers, body, url, search } = {}) {\n        this.method = isPresent(method) ? normalizeMethodName(method) : null;\n        this.headers = isPresent(headers) ? headers : null;\n        this.body = isPresent(body) ? body : null;\n        this.url = isPresent(url) ? url : null;\n        this.search = isPresent(search) ? (isString(search) ? new URLSearchParams((search)) :\n            (search)) :\n            null;\n    }\n    /**\n     * Creates a copy of the `RequestOptions` instance, using the optional input as values to override\n     * existing values. This method will not change the values of the instance on which it is being\n     * called.\n     *\n     * Note that `headers` and `search` will override existing values completely if present in\n     * the `options` object. If these values should be merged, it should be done prior to calling\n     * `merge` on the `RequestOptions` instance.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/6w8XA8YTkDRcPYpdB9dk?p=preview))\n     *\n     * ```typescript\n     * import {RequestOptions, Request, RequestMethod} from '@angular/http';\n     *\n     * var options = new RequestOptions({\n     *   method: RequestMethod.Post\n     * });\n     * var req = new Request(options.merge({\n     *   url: 'https://google.com'\n     * }));\n     * console.log('req.method:', RequestMethod[req.method]); // Post\n     * console.log('options.url:', options.url); // null\n     * console.log('req.url:', req.url); // https://google.com\n     * ```\n     */\n    merge(options) {\n        return new RequestOptions({\n            method: isPresent(options) && isPresent(options.method) ? options.method : this.method,\n            headers: isPresent(options) && isPresent(options.headers) ? options.headers : this.headers,\n            body: isPresent(options) && isPresent(options.body) ? options.body : this.body,\n            url: isPresent(options) && isPresent(options.url) ? options.url : this.url,\n            search: isPresent(options) && isPresent(options.search) ?\n                (isString(options.search) ? new URLSearchParams((options.search)) :\n                    (options.search).clone()) :\n                this.search\n        });\n    }\n}\nexport class BaseRequestOptions extends RequestOptions {\n    constructor() {\n        super({ method: RequestMethod.Get, headers: new Headers() });\n    }\n}\nBaseRequestOptions.decorators = [\n    { type: Injectable },\n];\nBaseRequestOptions.ctorParameters = [];\n//# sourceMappingURL=base_request_options.js.map","import { isString, isPresent } from '../src/facade/lang';\nimport { makeTypeError } from '../src/facade/exceptions';\nimport { Injectable } from '@angular/core';\nimport { ConnectionBackend } from './interfaces';\nimport { Request } from './static_request';\nimport { RequestOptions } from './base_request_options';\nimport { RequestMethod } from './enums';\nfunction httpRequest(backend, request) {\n    return backend.createConnection(request).response;\n}\nfunction mergeOptions(defaultOpts, providedOpts, method, url) {\n    var newOptions = defaultOpts;\n    if (isPresent(providedOpts)) {\n        // Hack so Dart can used named parameters\n        return newOptions.merge(new RequestOptions({\n            method: providedOpts.method || method,\n            url: providedOpts.url || url,\n            search: providedOpts.search,\n            headers: providedOpts.headers,\n            body: providedOpts.body\n        }));\n    }\n    if (isPresent(method)) {\n        return newOptions.merge(new RequestOptions({ method: method, url: url }));\n    }\n    else {\n        return newOptions.merge(new RequestOptions({ url: url }));\n    }\n}\nexport class Http {\n    constructor(_backend, _defaultOptions) {\n        this._backend = _backend;\n        this._defaultOptions = _defaultOptions;\n    }\n    /**\n     * Performs any type of http request. First argument is required, and can either be a url or\n     * a {@link Request} instance. If the first argument is a url, an optional {@link RequestOptions}\n     * object can be provided as the 2nd argument. The options object will be merged with the values\n     * of {@link BaseRequestOptions} before performing the request.\n     */\n    request(url, options) {\n        var responseObservable;\n        if (isString(url)) {\n            responseObservable = httpRequest(this._backend, new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, url)));\n        }\n        else if (url instanceof Request) {\n            responseObservable = httpRequest(this._backend, url);\n        }\n        else {\n            throw makeTypeError('First argument must be a url string or Request instance.');\n        }\n        return responseObservable;\n    }\n    /**\n     * Performs a request with `get` http method.\n     */\n    get(url, options) {\n        return httpRequest(this._backend, new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, url)));\n    }\n    /**\n     * Performs a request with `post` http method.\n     */\n    post(url, body, options) {\n        return httpRequest(this._backend, new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, RequestMethod.Post, url)));\n    }\n    /**\n     * Performs a request with `put` http method.\n     */\n    put(url, body, options) {\n        return httpRequest(this._backend, new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, RequestMethod.Put, url)));\n    }\n    /**\n     * Performs a request with `delete` http method.\n     */\n    delete(url, options) {\n        return httpRequest(this._backend, new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Delete, url)));\n    }\n    /**\n     * Performs a request with `patch` http method.\n     */\n    patch(url, body, options) {\n        return httpRequest(this._backend, new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, RequestMethod.Patch, url)));\n    }\n    /**\n     * Performs a request with `head` http method.\n     */\n    head(url, options) {\n        return httpRequest(this._backend, new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Head, url)));\n    }\n}\nHttp.decorators = [\n    { type: Injectable },\n];\nHttp.ctorParameters = [\n    { type: ConnectionBackend, },\n    { type: RequestOptions, },\n];\nexport class Jsonp extends Http {\n    constructor(backend, defaultOptions) {\n        super(backend, defaultOptions);\n    }\n    /**\n     * Performs any type of http request. First argument is required, and can either be a url or\n     * a {@link Request} instance. If the first argument is a url, an optional {@link RequestOptions}\n     * object can be provided as the 2nd argument. The options object will be merged with the values\n     * of {@link BaseRequestOptions} before performing the request.\n     */\n    request(url, options) {\n        var responseObservable;\n        if (isString(url)) {\n            url =\n                new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, url));\n        }\n        if (url instanceof Request) {\n            if (url.method !== RequestMethod.Get) {\n                makeTypeError('JSONP requests must use GET request method.');\n            }\n            responseObservable = httpRequest(this._backend, url);\n        }\n        else {\n            throw makeTypeError('First argument must be a url string or Request instance.');\n        }\n        return responseObservable;\n    }\n}\nJsonp.decorators = [\n    { type: Injectable },\n];\nJsonp.ctorParameters = [\n    { type: ConnectionBackend, },\n    { type: RequestOptions, },\n];\n//# sourceMappingURL=http.js.map","import { isString, Json } from '../src/facade/lang';\nimport { BaseException } from '../src/facade/exceptions';\nimport { isJsObject } from './http_utils';\n/**\n * Creates `Response` instances from provided values.\n *\n * Though this object isn't\n * usually instantiated by end-users, it is the primary object interacted with when it comes time to\n * add data to a view.\n *\n * ### Example\n *\n * ```\n * http.request('my-friends.txt').subscribe(response => this.friends = response.text());\n * ```\n *\n * The Response's interface is inspired by the Response constructor defined in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#response-class), but is considered a static value whose body\n * can be accessed many times. There are other differences in the implementation, but this is the\n * most significant.\n */\nexport class Response {\n    constructor(responseOptions) {\n        this._body = responseOptions.body;\n        this.status = responseOptions.status;\n        this.ok = (this.status >= 200 && this.status <= 299);\n        this.statusText = responseOptions.statusText;\n        this.headers = responseOptions.headers;\n        this.type = responseOptions.type;\n        this.url = responseOptions.url;\n    }\n    /**\n     * Not yet implemented\n     */\n    // TODO: Blob return type\n    blob() { throw new BaseException('\"blob()\" method not implemented on Response superclass'); }\n    /**\n     * Attempts to return body as parsed `JSON` object, or raises an exception.\n     */\n    json() {\n        var jsonResponse;\n        if (isJsObject(this._body)) {\n            jsonResponse = this._body;\n        }\n        else if (isString(this._body)) {\n            jsonResponse = Json.parse(this._body);\n        }\n        return jsonResponse;\n    }\n    /**\n     * Returns the body as a string, presuming `toString()` can be called on the response body.\n     */\n    text() { return this._body.toString(); }\n    /**\n     * Not yet implemented\n     */\n    // TODO: ArrayBuffer return type\n    arrayBuffer() {\n        throw new BaseException('\"arrayBuffer()\" method not implemented on Response superclass');\n    }\n}\n//# sourceMappingURL=static_response.js.map","import { Injectable } from '@angular/core';\nimport { isPresent } from '../src/facade/lang';\nimport { Headers } from './headers';\nimport { ResponseType } from './enums';\n/**\n * Creates a response options object to be optionally provided when instantiating a\n * {@link Response}.\n *\n * This class is based on the `ResponseInit` description in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#responseinit).\n *\n * All values are null by default. Typical defaults can be found in the\n * {@link BaseResponseOptions} class, which sub-classes `ResponseOptions`.\n *\n * This class may be used in tests to build {@link Response Responses} for\n * mock responses (see {@link MockBackend}).\n *\n * ### Example ([live demo](http://plnkr.co/edit/P9Jkk8e8cz6NVzbcxEsD?p=preview))\n *\n * ```typescript\n * import {ResponseOptions, Response} from '@angular/http';\n *\n * var options = new ResponseOptions({\n *   body: '{\"name\":\"Jeff\"}'\n * });\n * var res = new Response(options);\n *\n * console.log('res.json():', res.json()); // Object {name: \"Jeff\"}\n * ```\n */\nexport class ResponseOptions {\n    constructor({ body, status, headers, statusText, type, url } = {}) {\n        this.body = isPresent(body) ? body : null;\n        this.status = isPresent(status) ? status : null;\n        this.headers = isPresent(headers) ? headers : null;\n        this.statusText = isPresent(statusText) ? statusText : null;\n        this.type = isPresent(type) ? type : null;\n        this.url = isPresent(url) ? url : null;\n    }\n    /**\n     * Creates a copy of the `ResponseOptions` instance, using the optional input as values to\n     * override\n     * existing values. This method will not change the values of the instance on which it is being\n     * called.\n     *\n     * This may be useful when sharing a base `ResponseOptions` object inside tests,\n     * where certain properties may change from test to test.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/1lXquqFfgduTFBWjNoRE?p=preview))\n     *\n     * ```typescript\n     * import {ResponseOptions, Response} from '@angular/http';\n     *\n     * var options = new ResponseOptions({\n     *   body: {name: 'Jeff'}\n     * });\n     * var res = new Response(options.merge({\n     *   url: 'https://google.com'\n     * }));\n     * console.log('options.url:', options.url); // null\n     * console.log('res.json():', res.json()); // Object {name: \"Jeff\"}\n     * console.log('res.url:', res.url); // https://google.com\n     * ```\n     */\n    merge(options) {\n        return new ResponseOptions({\n            body: isPresent(options) && isPresent(options.body) ? options.body : this.body,\n            status: isPresent(options) && isPresent(options.status) ? options.status : this.status,\n            headers: isPresent(options) && isPresent(options.headers) ? options.headers : this.headers,\n            statusText: isPresent(options) && isPresent(options.statusText) ? options.statusText :\n                this.statusText,\n            type: isPresent(options) && isPresent(options.type) ? options.type : this.type,\n            url: isPresent(options) && isPresent(options.url) ? options.url : this.url,\n        });\n    }\n}\nexport class BaseResponseOptions extends ResponseOptions {\n    constructor() {\n        super({ status: 200, statusText: 'Ok', type: ResponseType.Default, headers: new Headers() });\n    }\n}\nBaseResponseOptions.decorators = [\n    { type: Injectable },\n];\nBaseResponseOptions.ctorParameters = [];\n//# sourceMappingURL=base_response_options.js.map","import { Injectable } from '@angular/core';\nexport class BrowserXhr {\n    constructor() {\n    }\n    build() { return (new XMLHttpRequest()); }\n}\nBrowserXhr.decorators = [\n    { type: Injectable },\n];\nBrowserXhr.ctorParameters = [];\n//# sourceMappingURL=browser_xhr.js.map","import { RequestMethod, ResponseType } from '../enums';\nimport { Response } from '../static_response';\nimport { Headers } from '../headers';\nimport { ResponseOptions } from '../base_response_options';\nimport { Injectable } from '@angular/core';\nimport { BrowserXhr } from './browser_xhr';\nimport { isPresent } from '../../src/facade/lang';\nimport { Observable } from 'rxjs/Observable';\nimport { isSuccess, getResponseURL } from '../http_utils';\n/**\n* Creates connections using `XMLHttpRequest`. Given a fully-qualified\n* request, an `XHRConnection` will immediately create an `XMLHttpRequest` object and send the\n* request.\n*\n* This class would typically not be created or interacted with directly inside applications, though\n* the {@link MockConnection} may be interacted with in tests.\n*/\nexport class XHRConnection {\n    constructor(req, browserXHR, baseResponseOptions) {\n        this.request = req;\n        this.response = new Observable((responseObserver) => {\n            let _xhr = browserXHR.build();\n            _xhr.open(RequestMethod[req.method].toUpperCase(), req.url);\n            // load event handler\n            let onLoad = () => {\n                // responseText is the old-school way of retrieving response (supported by IE8 & 9)\n                // response/responseType properties were introduced in XHR Level2 spec (supported by\n                // IE10)\n                let body = isPresent(_xhr.response) ? _xhr.response : _xhr.responseText;\n                let headers = Headers.fromResponseHeaderString(_xhr.getAllResponseHeaders());\n                let url = getResponseURL(_xhr);\n                // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\n                let status = _xhr.status === 1223 ? 204 : _xhr.status;\n                // fix status code when it is 0 (0 status is undocumented).\n                // Occurs when accessing file resources or on Android 4.1 stock browser\n                // while retrieving files from application cache.\n                if (status === 0) {\n                    status = body ? 200 : 0;\n                }\n                var responseOptions = new ResponseOptions({ body, status, headers, url });\n                if (isPresent(baseResponseOptions)) {\n                    responseOptions = baseResponseOptions.merge(responseOptions);\n                }\n                let response = new Response(responseOptions);\n                if (isSuccess(status)) {\n                    responseObserver.next(response);\n                    // TODO(gdi2290): defer complete if array buffer until done\n                    responseObserver.complete();\n                    return;\n                }\n                responseObserver.error(response);\n            };\n            // error event handler\n            let onError = (err) => {\n                var responseOptions = new ResponseOptions({ body: err, type: ResponseType.Error });\n                if (isPresent(baseResponseOptions)) {\n                    responseOptions = baseResponseOptions.merge(responseOptions);\n                }\n                responseObserver.error(new Response(responseOptions));\n            };\n            if (isPresent(req.headers)) {\n                req.headers.forEach((values, name) => _xhr.setRequestHeader(name, values.join(',')));\n            }\n            _xhr.addEventListener('load', onLoad);\n            _xhr.addEventListener('error', onError);\n            _xhr.send(this.request.text());\n            return () => {\n                _xhr.removeEventListener('load', onLoad);\n                _xhr.removeEventListener('error', onError);\n                _xhr.abort();\n            };\n        });\n    }\n}\nexport class XHRBackend {\n    constructor(_browserXHR, _baseResponseOptions) {\n        this._browserXHR = _browserXHR;\n        this._baseResponseOptions = _baseResponseOptions;\n    }\n    createConnection(request) {\n        return new XHRConnection(request, this._browserXHR, this._baseResponseOptions);\n    }\n}\nXHRBackend.decorators = [\n    { type: Injectable },\n];\nXHRBackend.ctorParameters = [\n    { type: BrowserXhr, },\n    { type: ResponseOptions, },\n];\n//# sourceMappingURL=xhr_backend.js.map","import { Injectable } from '@angular/core';\nimport { global } from '../../src/facade/lang';\nlet _nextRequestId = 0;\nexport const JSONP_HOME = '__ng_jsonp__';\nvar _jsonpConnections = null;\nfunction _getJsonpConnections() {\n    if (_jsonpConnections === null) {\n        _jsonpConnections = global[JSONP_HOME] = {};\n    }\n    return _jsonpConnections;\n}\nexport class BrowserJsonp {\n    // Construct a <script> element with the specified URL\n    build(url) {\n        let node = document.createElement('script');\n        node.src = url;\n        return node;\n    }\n    nextRequestID() { return `__req${_nextRequestId++}`; }\n    requestCallback(id) { return `${JSONP_HOME}.${id}.finished`; }\n    exposeConnection(id, connection) {\n        let connections = _getJsonpConnections();\n        connections[id] = connection;\n    }\n    removeConnection(id) {\n        var connections = _getJsonpConnections();\n        connections[id] = null;\n    }\n    // Attach the <script> element to the DOM\n    send(node) { document.body.appendChild((node)); }\n    // Remove <script> element from the DOM\n    cleanup(node) {\n        if (node.parentNode) {\n            node.parentNode.removeChild((node));\n        }\n    }\n}\nBrowserJsonp.decorators = [\n    { type: Injectable },\n];\n//# sourceMappingURL=browser_jsonp.js.map","import { ConnectionBackend } from '../interfaces';\nimport { ReadyState, RequestMethod, ResponseType } from '../enums';\nimport { Response } from '../static_response';\nimport { ResponseOptions } from '../base_response_options';\nimport { Injectable } from '@angular/core';\nimport { BrowserJsonp } from './browser_jsonp';\nimport { makeTypeError } from '../../src/facade/exceptions';\nimport { StringWrapper, isPresent } from '../../src/facade/lang';\nimport { Observable } from 'rxjs/Observable';\nconst JSONP_ERR_NO_CALLBACK = 'JSONP injected script did not invoke callback.';\nconst JSONP_ERR_WRONG_METHOD = 'JSONP requests must use GET request method.';\n/**\n * Abstract base class for an in-flight JSONP request.\n */\nexport class JSONPConnection {\n}\nexport class JSONPConnection_ extends JSONPConnection {\n    constructor(req, _dom, baseResponseOptions) {\n        super();\n        this._dom = _dom;\n        this.baseResponseOptions = baseResponseOptions;\n        this._finished = false;\n        if (req.method !== RequestMethod.Get) {\n            throw makeTypeError(JSONP_ERR_WRONG_METHOD);\n        }\n        this.request = req;\n        this.response = new Observable((responseObserver) => {\n            this.readyState = ReadyState.Loading;\n            let id = this._id = _dom.nextRequestID();\n            _dom.exposeConnection(id, this);\n            // Workaround Dart\n            // url = url.replace(/=JSONP_CALLBACK(&|$)/, `generated method`);\n            let callback = _dom.requestCallback(this._id);\n            let url = req.url;\n            if (url.indexOf('=JSONP_CALLBACK&') > -1) {\n                url = StringWrapper.replace(url, '=JSONP_CALLBACK&', `=${callback}&`);\n            }\n            else if (url.lastIndexOf('=JSONP_CALLBACK') === url.length - '=JSONP_CALLBACK'.length) {\n                url = url.substring(0, url.length - '=JSONP_CALLBACK'.length) + `=${callback}`;\n            }\n            let script = this._script = _dom.build(url);\n            let onLoad = (event) => {\n                if (this.readyState === ReadyState.Cancelled)\n                    return;\n                this.readyState = ReadyState.Done;\n                _dom.cleanup(script);\n                if (!this._finished) {\n                    let responseOptions = new ResponseOptions({ body: JSONP_ERR_NO_CALLBACK, type: ResponseType.Error, url });\n                    if (isPresent(baseResponseOptions)) {\n                        responseOptions = baseResponseOptions.merge(responseOptions);\n                    }\n                    responseObserver.error(new Response(responseOptions));\n                    return;\n                }\n                let responseOptions = new ResponseOptions({ body: this._responseData, url });\n                if (isPresent(this.baseResponseOptions)) {\n                    responseOptions = this.baseResponseOptions.merge(responseOptions);\n                }\n                responseObserver.next(new Response(responseOptions));\n                responseObserver.complete();\n            };\n            let onError = (error) => {\n                if (this.readyState === ReadyState.Cancelled)\n                    return;\n                this.readyState = ReadyState.Done;\n                _dom.cleanup(script);\n                let responseOptions = new ResponseOptions({ body: error.message, type: ResponseType.Error });\n                if (isPresent(baseResponseOptions)) {\n                    responseOptions = baseResponseOptions.merge(responseOptions);\n                }\n                responseObserver.error(new Response(responseOptions));\n            };\n            script.addEventListener('load', onLoad);\n            script.addEventListener('error', onError);\n            _dom.send(script);\n            return () => {\n                this.readyState = ReadyState.Cancelled;\n                script.removeEventListener('load', onLoad);\n                script.removeEventListener('error', onError);\n                if (isPresent(script)) {\n                    this._dom.cleanup(script);\n                }\n            };\n        });\n    }\n    finished(data) {\n        // Don't leak connections\n        this._finished = true;\n        this._dom.removeConnection(this._id);\n        if (this.readyState === ReadyState.Cancelled)\n            return;\n        this._responseData = data;\n    }\n}\n/**\n * A {@link ConnectionBackend} that uses the JSONP strategy of making requests.\n */\nexport class JSONPBackend extends ConnectionBackend {\n}\nexport class JSONPBackend_ extends JSONPBackend {\n    constructor(_browserJSONP, _baseResponseOptions) {\n        super();\n        this._browserJSONP = _browserJSONP;\n        this._baseResponseOptions = _baseResponseOptions;\n    }\n    createConnection(request) {\n        return new JSONPConnection_(request, this._browserJSONP, this._baseResponseOptions);\n    }\n}\nJSONPBackend_.decorators = [\n    { type: Injectable },\n];\nJSONPBackend_.ctorParameters = [\n    { type: BrowserJsonp, },\n    { type: ResponseOptions, },\n];\n//# sourceMappingURL=jsonp_backend.js.map","import { provide } from '@angular/core';\nimport { Http, Jsonp } from './src/http';\nimport { XHRBackend } from './src/backends/xhr_backend';\nimport { JSONPBackend, JSONPBackend_ } from './src/backends/jsonp_backend';\nimport { BrowserXhr } from './src/backends/browser_xhr';\nimport { BrowserJsonp } from './src/backends/browser_jsonp';\nimport { BaseRequestOptions, RequestOptions } from './src/base_request_options';\nimport { BaseResponseOptions, ResponseOptions } from './src/base_response_options';\nexport { Request } from './src/static_request';\nexport { Response } from './src/static_response';\nexport { Connection, ConnectionBackend } from './src/interfaces';\nexport { BrowserXhr } from './src/backends/browser_xhr';\nexport { BaseRequestOptions, RequestOptions } from './src/base_request_options';\nexport { BaseResponseOptions, ResponseOptions } from './src/base_response_options';\nexport { XHRBackend, XHRConnection } from './src/backends/xhr_backend';\nexport { JSONPBackend, JSONPConnection } from './src/backends/jsonp_backend';\nexport { Http, Jsonp } from './src/http';\nexport { Headers } from './src/headers';\nexport { ResponseType, ReadyState, RequestMethod } from './src/enums';\nexport { URLSearchParams } from './src/url_search_params';\n/**\n * Provides a basic set of injectables to use the {@link Http} service in any application.\n *\n * The `HTTP_PROVIDERS` should be included either in a component's injector,\n * or in the root injector when bootstrapping an application.\n *\n * ### Example ([live demo](http://plnkr.co/edit/snj7Nv?p=preview))\n *\n * ```\n * import {Component} from '@angular/core';\n * import {bootstrap} from '@angular/platform-browser/browser';\n * import {NgFor} from '@angular/common';\n * import {HTTP_PROVIDERS, Http} from '@angular/http';\n *\n * @Component({\n *   selector: 'app',\n *   providers: [HTTP_PROVIDERS],\n *   template: `\n *     <div>\n *       <h1>People</h1>\n *       <ul>\n *         <li *ngFor=\"let person of people\">\n *           {{person.name}}\n *         </li>\n *       </ul>\n *     </div>\n *   `,\n *   directives: [NgFor]\n * })\n * export class App {\n *   people: Object[];\n *   constructor(http:Http) {\n *     http.get('people.json').subscribe(res => {\n *       this.people = res.json();\n *     });\n *   }\n *   active:boolean = false;\n *   toggleActiveState() {\n *     this.active = !this.active;\n *   }\n * }\n *\n * bootstrap(App)\n *   .catch(err => console.error(err));\n * ```\n *\n * The primary public API included in `HTTP_PROVIDERS` is the {@link Http} class.\n * However, other providers required by `Http` are included,\n * which may be beneficial to override in certain cases.\n *\n * The providers included in `HTTP_PROVIDERS` include:\n *  * {@link Http}\n *  * {@link XHRBackend}\n *  * `BrowserXHR` - Private factory to create `XMLHttpRequest` instances\n *  * {@link RequestOptions} - Bound to {@link BaseRequestOptions} class\n *  * {@link ResponseOptions} - Bound to {@link BaseResponseOptions} class\n *\n * There may be cases where it makes sense to extend the base request options,\n * such as to add a search string to be appended to all URLs.\n * To accomplish this, a new provider for {@link RequestOptions} should\n * be added in the same injector as `HTTP_PROVIDERS`.\n *\n * ### Example ([live demo](http://plnkr.co/edit/aCMEXi?p=preview))\n *\n * ```\n * import {provide} from '@angular/core';\n * import {bootstrap} from '@angular/platform-browser/browser';\n * import {HTTP_PROVIDERS, BaseRequestOptions, RequestOptions} from '@angular/http';\n *\n * class MyOptions extends BaseRequestOptions {\n *   search: string = 'coreTeam=true';\n * }\n *\n * bootstrap(App, [HTTP_PROVIDERS, provide(RequestOptions, {useClass: MyOptions})])\n *   .catch(err => console.error(err));\n * ```\n *\n * Likewise, to use a mock backend for unit tests, the {@link XHRBackend}\n * provider should be bound to {@link MockBackend}.\n *\n * ### Example ([live demo](http://plnkr.co/edit/7LWALD?p=preview))\n *\n * ```\n * import {provide} from '@angular/core';\n * import {bootstrap} from '@angular/platform-browser/browser';\n * import {HTTP_PROVIDERS, Http, Response, XHRBackend} from '@angular/http';\n * import {MockBackend} from '@angular/http/testing';\n *\n * var people = [{name: 'Jeff'}, {name: 'Tobias'}];\n *\n * var injector = Injector.resolveAndCreate([\n *   HTTP_PROVIDERS,\n *   MockBackend,\n *   provide(XHRBackend, {useExisting: MockBackend})\n * ]);\n * var http = injector.get(Http);\n * var backend = injector.get(MockBackend);\n *\n * // Listen for any new requests\n * backend.connections.observer({\n *   next: connection => {\n *     var response = new Response({body: people});\n *     setTimeout(() => {\n *       // Send a response to the request\n *       connection.mockRespond(response);\n *     });\n *   }\n * });\n *\n * http.get('people.json').observer({\n *   next: res => {\n *     // Response came from mock backend\n *     console.log('first person', res.json()[0].name);\n *   }\n * });\n * ```\n */\nexport const HTTP_PROVIDERS = [\n    // TODO(pascal): use factory type annotations once supported in DI\n    // issue: https://github.com/angular/angular/issues/3183\n    provide(Http, {\n        useFactory: (xhrBackend, requestOptions) => new Http(xhrBackend, requestOptions),\n        deps: [XHRBackend, RequestOptions]\n    }),\n    BrowserXhr,\n    provide(RequestOptions, { useClass: BaseRequestOptions }),\n    provide(ResponseOptions, { useClass: BaseResponseOptions }),\n    XHRBackend\n];\n/**\n * See {@link HTTP_PROVIDERS} instead.\n *\n * @deprecated\n */\nexport const HTTP_BINDINGS = HTTP_PROVIDERS;\n/**\n * Provides a basic set of providers to use the {@link Jsonp} service in any application.\n *\n * The `JSONP_PROVIDERS` should be included either in a component's injector,\n * or in the root injector when bootstrapping an application.\n *\n * ### Example ([live demo](http://plnkr.co/edit/vmeN4F?p=preview))\n *\n * ```\n * import {Component} from '@angular/core';\n * import {NgFor} from '@angular/common';\n * import {JSONP_PROVIDERS, Jsonp} from '@angular/http';\n *\n * @Component({\n *   selector: 'app',\n *   providers: [JSONP_PROVIDERS],\n *   template: `\n *     <div>\n *       <h1>People</h1>\n *       <ul>\n *         <li *ngFor=\"let person of people\">\n *           {{person.name}}\n *         </li>\n *       </ul>\n *     </div>\n *   `,\n *   directives: [NgFor]\n * })\n * export class App {\n *   people: Array<Object>;\n *   constructor(jsonp:Jsonp) {\n *     jsonp.request('people.json').subscribe(res => {\n *       this.people = res.json();\n *     })\n *   }\n * }\n * ```\n *\n * The primary public API included in `JSONP_PROVIDERS` is the {@link Jsonp} class.\n * However, other providers required by `Jsonp` are included,\n * which may be beneficial to override in certain cases.\n *\n * The providers included in `JSONP_PROVIDERS` include:\n *  * {@link Jsonp}\n *  * {@link JSONPBackend}\n *  * `BrowserJsonp` - Private factory\n *  * {@link RequestOptions} - Bound to {@link BaseRequestOptions} class\n *  * {@link ResponseOptions} - Bound to {@link BaseResponseOptions} class\n *\n * There may be cases where it makes sense to extend the base request options,\n * such as to add a search string to be appended to all URLs.\n * To accomplish this, a new provider for {@link RequestOptions} should\n * be added in the same injector as `JSONP_PROVIDERS`.\n *\n * ### Example ([live demo](http://plnkr.co/edit/TFug7x?p=preview))\n *\n * ```\n * import {provide} from '@angular/core';\n * import {bootstrap} from '@angular/platform-browser/browser';\n * import {JSONP_PROVIDERS, BaseRequestOptions, RequestOptions} from '@angular/http';\n *\n * class MyOptions extends BaseRequestOptions {\n *   search: string = 'coreTeam=true';\n * }\n *\n * bootstrap(App, [JSONP_PROVIDERS, provide(RequestOptions, {useClass: MyOptions})])\n *   .catch(err => console.error(err));\n * ```\n *\n * Likewise, to use a mock backend for unit tests, the {@link JSONPBackend}\n * provider should be bound to {@link MockBackend}.\n *\n * ### Example ([live demo](http://plnkr.co/edit/HDqZWL?p=preview))\n *\n * ```\n * import {provide, Injector} from '@angular/core';\n * import {JSONP_PROVIDERS, Jsonp, Response, JSONPBackend} from '@angular/http';\n * import {MockBackend} from '@angular/http/testing';\n *\n * var people = [{name: 'Jeff'}, {name: 'Tobias'}];\n * var injector = Injector.resolveAndCreate([\n *   JSONP_PROVIDERS,\n *   MockBackend,\n *   provide(JSONPBackend, {useExisting: MockBackend})\n * ]);\n * var jsonp = injector.get(Jsonp);\n * var backend = injector.get(MockBackend);\n *\n * // Listen for any new requests\n * backend.connections.observer({\n *   next: connection => {\n *     var response = new Response({body: people});\n *     setTimeout(() => {\n *       // Send a response to the request\n *       connection.mockRespond(response);\n *     });\n *   }\n * });\n\n * jsonp.get('people.json').observer({\n *   next: res => {\n *     // Response came from mock backend\n *     console.log('first person', res.json()[0].name);\n *   }\n * });\n * ```\n */\nexport const JSONP_PROVIDERS = [\n    // TODO(pascal): use factory type annotations once supported in DI\n    // issue: https://github.com/angular/angular/issues/3183\n    provide(Jsonp, {\n        useFactory: (jsonpBackend, requestOptions) => new Jsonp(jsonpBackend, requestOptions),\n        deps: [JSONPBackend, RequestOptions]\n    }),\n    BrowserJsonp,\n    provide(RequestOptions, { useClass: BaseRequestOptions }),\n    provide(ResponseOptions, { useClass: BaseResponseOptions }),\n    provide(JSONPBackend, { useClass: JSONPBackend_ })\n];\n/**\n * See {@link JSONP_PROVIDERS} instead.\n *\n * @deprecated\n */\nexport const JSON_BINDINGS = JSONP_PROVIDERS;\n//# sourceMappingURL=http.js.map"],"names":["_global","global","Map","RequestMethod","ReadyState","ResponseType","Injectable","Observable","provide"],"mappings":"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"}